@model AdminPanel.Models.Tour

<section class="content-header">
    <h1>
        Туры
    </h1>
</section>

<!-- Main content -->
<section class="content container-fluid">
    <!-- Horizontal Form -->
    <div class="box box-info">
        <div class="box-header with-border">
            <h3 class="box-title">Добавить тур</h3>
        </div>
        <!-- /.box-header -->
        <!-- form start -->
        <form class="form-horizontal" method="post" action="Create">
            <div class="box-body">

                <div class="form-group">
                    <label for="inputEmail3" class="col-sm-2 control-label">Из страны</label>
                    <div class="col-sm-10">
                        @Html.DropDownList("CountryId", null, htmlAttributes: new { @class = "form-control", @id = "countries-list-from", @onchange = "CountryIsChanged(true);" })
                    </div>
                </div>

                <div class="form-group">
                    <label for="inputEmail3" class="col-sm-2 control-label">Из региона</label>
                    <div class="col-sm-10" id="region-list-from"></div>
                </div>

                <div class="form-group">
                    <label for="inputEmail3" class="col-sm-2 control-label">Из города</label>
                    <div class="col-sm-10" id="city-list-from"></div>
                </div>


                <div class="form-group">
                    <label for="inputEmail3" class="col-sm-2 control-label">В страну</label>
                    <div class="col-sm-10">
                        @Html.DropDownList("CountryId", null, htmlAttributes: new { @class = "form-control", @id = "countries-list-to", @onchange = "CountryIsChanged(false);" })
                    </div>
                </div>

                <div class="form-group">
                    <label for="inputEmail3" class="col-sm-2 control-label">В регион</label>
                    <div class="col-sm-10" id="region-list-to"></div>
                </div>

                <div class="form-group">
                    <label for="inputEmail3" class="col-sm-2 control-label">В город</label>
                    <div class="col-sm-10" id="city-list-to"></div>
                </div>


                <div class="form-group">
                    <label for="inputEmail3" class="col-sm-2 control-label">Дата вылета</label>
                    <div class="col-sm-10">
                        <input type="text" class="form-control" name="StartDate" placeholder="Дата вылета">
                        @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label for="inputEmail3" class="col-sm-2 control-label">Дата возвращения</label>
                    <div class="col-sm-10">
                        <input type="text" class="form-control" name="EndDate" placeholder="Дата возвращения">
                        @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label for="inputEmail3" class="col-sm-2 control-label">Цена</label>
                    <div class="col-sm-10">
                        <input type="text" class="form-control" name="Price" placeholder="Цена">
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
            <!-- /.box-body -->
            <div class="box-footer">
                <button class="btn btn-default">@Html.ActionLink("Отмена", "Index")</button>
                <button type="submit" class="btn btn-info pull-right">Создать</button>
            </div>
            <!-- /.box-footer -->
        </form>
    </div>
    <!-- /.box -->
</section>

<script>
    // Заполняет поля 'в регион' и 'из региона' при старте страницы
    CountryIsChanged(false);
    CountryIsChanged(true);

    function CountryIsChanged(from) {
        var countryId;

        if (from) { countryId = document.getElementById("countries-list-from").value; }
        else { countryId = document.getElementById("countries-list-to").value; }

        $.ajax(
            {
                url: '@Url.Action("CountryIsChangedDropDownList", "Tours")',
                data: {
                    countryId: countryId
                },
                error: () => alert("Невозможно загрузить список регионов в соответсвии с выбранной страной"),
                success: function (result) {
                    if (from) {
                        $('#region-list-from').html(result);
                        RegionIsChanged('region-list-from');
                    }
                    else {
                        $('#region-list-to').html(result);
                        RegionIsChanged('region-list-to');
                    }
                }
            }
        );
    }

    function RegionIsChanged(parentId) {
        var regionId;

        if (parentId == "region-list-from") { regionId = document.getElementById("region-list-from").firstChild.value; }
        else { regionId = document.getElementById("region-list-to").firstChild.value; }

        $.ajax(
            {
                url: '@Url.Action("RegionIsChangedDropDownList", "Tours")',
                data: {
                    regionId: regionId
                },
                error: () => alert("Невозможно загрузить список городов в соответсвии с выбранным регионом"),
                success: function (result) {
                    if (parentId == "region-list-from") { $('#city-list-from').html(result); }
                    else { $('#city-list-to').html(result) }
                }
            }
        );
    }

</script>